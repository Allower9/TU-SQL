name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Frontend image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/frontend-tu:${{ github.ref_name }}
            ${{ secrets.DOCKER_USERNAME }}/frontend-tu:latest

      - name: Build and push Nginx image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./nginx/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/nginx-tu:latest

  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 45  # Увеличиваем общий таймаут
    
    strategy:
      matrix:
        include:
          - branch: main
            server_ip: ${{ secrets.PROD_SERVER_IP }}
            env: prod
          - branch: dev
            server_ip: ${{ secrets.DEV_SERVER_IP }}
            env: dev

    steps:
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.PROD_SSH_PRIVATE_KEY }}

      - name: Check server connection
        run: |
          ssh -o StrictHostKeyChecking=no user1@${{ matrix.server_ip }} "
            echo 'Server connection successful'
            uname -a
          "

      - name: Prepare Docker environment
        timeout-minutes: 5
        run: |
          ssh -o StrictHostKeyChecking=no user1@${{ matrix.server_ip }} "
            sudo docker system prune -a -f || true
            sudo docker system df
            df -h
          "

      - name: Pull Frontend image (with retry)
        timeout-minutes: 20
        run: |
          for i in {1..3}; do
            ssh -o StrictHostKeyChecking=no user1@${{ matrix.server_ip }} "
              sudo docker pull ${{ secrets.DOCKER_USERNAME }}/frontend-tu:${{ matrix.env }}
            " && break || sleep 30
          done

      - name: Pull Nginx image (with retry)
        timeout-minutes: 15
        run: |
          for i in {1..3}; do
            ssh -o StrictHostKeyChecking=no user1@${{ matrix.server_ip }} "
              sudo docker pull ${{ secrets.DOCKER_USERNAME }}/nginx-tu:latest
            " && break || sleep 30
          done

      - name: Deploy containers
        timeout-minutes: 10
        run: |
          ssh -o StrictHostKeyChecking=no user1@${{ matrix.server_ip }} "
            cd TU-SQL-${{ matrix.env }} || exit 1
            sudo docker-compose -f docker-compose.${{ matrix.env }}.yml down -v
            sudo docker-compose -f docker-compose.${{ matrix.env }}.yml up -d
            sudo docker ps
          "

      - name: Verify deployment
        run: |
          ssh -o StrictHostKeyChecking=no user1@${{ matrix.server_ip }} "
            sudo docker ps --format 'table {{.ID}}\t{{.Names}}\t{{.Status}}'
            curl -I localhost || true
          "
