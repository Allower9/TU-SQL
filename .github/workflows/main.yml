name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - dev

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  PROD_SERVER_IP: ${{ secrets.PROD_SERVER_IP }}
  DEV_SERVER_IP: ${{ secrets.DEV_SERVER_IP }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Frontend image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ${{ env.DOCKER_USERNAME }}/frontend-tu:${{ github.ref_name }}
            ${{ env.DOCKER_USERNAME }}/frontend-tu:latest

      - name: Build and push Nginx image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./nginx/Dockerfile
          push: true
          tags: ${{ env.DOCKER_USERNAME }}/nginx-tu:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - branch: main
            server_ip: ${{ env.PROD_SERVER_IP }}
            env: prod
            compose_file: docker-compose.prod.yml
          - branch: dev
            server_ip: ${{ env.DEV_SERVER_IP }}
            env: dev
            compose_file: docker-compose.dev.yml
    steps:
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to server
        if: github.ref == 'refs/heads/${{ matrix.branch }}'
        run: |
          ssh -o StrictHostKeyChecking=no user1@${{ matrix.server_ip }} "
            cd TU-SQL-${{ matrix.env }} || exit 1
            sudo docker pull ${{ env.DOCKER_USERNAME }}/frontend-tu:${{ matrix.env }}
            sudo docker pull ${{ env.DOCKER_USERNAME }}/nginx-tu:latest
            
            sudo docker-compose -f ${{ matrix.compose_file }} down -v
            sudo docker-compose -f ${{ matrix.compose_file }} up -d
            
            echo 'Deployment to ${{ matrix.env }} completed!'
            sudo docker ps
          "
